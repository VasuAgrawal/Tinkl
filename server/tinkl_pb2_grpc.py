# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities

import tinkl_pb2 as tinkl__pb2


class TinklStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.getUrination = channel.unary_unary(
        '/Tinkl/getUrination',
        request_serializer=tinkl__pb2.PuckId.SerializeToString,
        response_deserializer=tinkl__pb2.Sample.FromString,
        )
    self.getAllUrination = channel.unary_stream(
        '/Tinkl/getAllUrination',
        request_serializer=tinkl__pb2.PuckId.SerializeToString,
        response_deserializer=tinkl__pb2.Sample.FromString,
        )


class TinklServicer(object):

  def getUrination(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getAllUrination(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TinklServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'getUrination': grpc.unary_unary_rpc_method_handler(
          servicer.getUrination,
          request_deserializer=tinkl__pb2.PuckId.FromString,
          response_serializer=tinkl__pb2.Sample.SerializeToString,
      ),
      'getAllUrination': grpc.unary_stream_rpc_method_handler(
          servicer.getAllUrination,
          request_deserializer=tinkl__pb2.PuckId.FromString,
          response_serializer=tinkl__pb2.Sample.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Tinkl', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
