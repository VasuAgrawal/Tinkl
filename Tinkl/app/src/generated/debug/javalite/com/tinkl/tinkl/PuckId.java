// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tinkl.proto

package com.tinkl.tinkl;

/**
 * Protobuf type {@code routeguide.PuckId}
 */
public  final class PuckId extends
    com.google.protobuf.GeneratedMessageLite<
        PuckId, PuckId.Builder> implements
    // @@protoc_insertion_point(message_implements:routeguide.PuckId)
    PuckIdOrBuilder {
  private PuckId() {
  }
  public static final int HUB_ID_FIELD_NUMBER = 1;
  private long hubId_;
  /**
   * <pre>
   * ID of the hub, unique globally
   * </pre>
   *
   * <code>optional uint64 hub_id = 1;</code>
   */
  public long getHubId() {
    return hubId_;
  }
  /**
   * <pre>
   * ID of the hub, unique globally
   * </pre>
   *
   * <code>optional uint64 hub_id = 1;</code>
   */
  private void setHubId(long value) {
    
    hubId_ = value;
  }
  /**
   * <pre>
   * ID of the hub, unique globally
   * </pre>
   *
   * <code>optional uint64 hub_id = 1;</code>
   */
  private void clearHubId() {
    
    hubId_ = 0L;
  }

  public static final int SENSOR_NODE_ID_FIELD_NUMBER = 2;
  private long sensorNodeId_;
  /**
   * <pre>
   * ID of the puck, unique within hub
   * </pre>
   *
   * <code>optional uint64 sensor_node_id = 2;</code>
   */
  public long getSensorNodeId() {
    return sensorNodeId_;
  }
  /**
   * <pre>
   * ID of the puck, unique within hub
   * </pre>
   *
   * <code>optional uint64 sensor_node_id = 2;</code>
   */
  private void setSensorNodeId(long value) {
    
    sensorNodeId_ = value;
  }
  /**
   * <pre>
   * ID of the puck, unique within hub
   * </pre>
   *
   * <code>optional uint64 sensor_node_id = 2;</code>
   */
  private void clearSensorNodeId() {
    
    sensorNodeId_ = 0L;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (hubId_ != 0L) {
      output.writeUInt64(1, hubId_);
    }
    if (sensorNodeId_ != 0L) {
      output.writeUInt64(2, sensorNodeId_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (hubId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(1, hubId_);
    }
    if (sensorNodeId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(2, sensorNodeId_);
    }
    memoizedSerializedSize = size;
    return size;
  }

  public static com.tinkl.tinkl.PuckId parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.tinkl.tinkl.PuckId parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.tinkl.tinkl.PuckId parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.tinkl.tinkl.PuckId parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.tinkl.tinkl.PuckId parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.tinkl.tinkl.PuckId parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.tinkl.tinkl.PuckId parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.tinkl.tinkl.PuckId parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.tinkl.tinkl.PuckId parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.tinkl.tinkl.PuckId parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.tinkl.tinkl.PuckId prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * Protobuf type {@code routeguide.PuckId}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.tinkl.tinkl.PuckId, Builder> implements
      // @@protoc_insertion_point(builder_implements:routeguide.PuckId)
      com.tinkl.tinkl.PuckIdOrBuilder {
    // Construct using com.tinkl.tinkl.PuckId.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * ID of the hub, unique globally
     * </pre>
     *
     * <code>optional uint64 hub_id = 1;</code>
     */
    public long getHubId() {
      return instance.getHubId();
    }
    /**
     * <pre>
     * ID of the hub, unique globally
     * </pre>
     *
     * <code>optional uint64 hub_id = 1;</code>
     */
    public Builder setHubId(long value) {
      copyOnWrite();
      instance.setHubId(value);
      return this;
    }
    /**
     * <pre>
     * ID of the hub, unique globally
     * </pre>
     *
     * <code>optional uint64 hub_id = 1;</code>
     */
    public Builder clearHubId() {
      copyOnWrite();
      instance.clearHubId();
      return this;
    }

    /**
     * <pre>
     * ID of the puck, unique within hub
     * </pre>
     *
     * <code>optional uint64 sensor_node_id = 2;</code>
     */
    public long getSensorNodeId() {
      return instance.getSensorNodeId();
    }
    /**
     * <pre>
     * ID of the puck, unique within hub
     * </pre>
     *
     * <code>optional uint64 sensor_node_id = 2;</code>
     */
    public Builder setSensorNodeId(long value) {
      copyOnWrite();
      instance.setSensorNodeId(value);
      return this;
    }
    /**
     * <pre>
     * ID of the puck, unique within hub
     * </pre>
     *
     * <code>optional uint64 sensor_node_id = 2;</code>
     */
    public Builder clearSensorNodeId() {
      copyOnWrite();
      instance.clearSensorNodeId();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:routeguide.PuckId)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.tinkl.tinkl.PuckId();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        com.tinkl.tinkl.PuckId other = (com.tinkl.tinkl.PuckId) arg1;
        hubId_ = visitor.visitLong(hubId_ != 0L, hubId_,
            other.hubId_ != 0L, other.hubId_);
        sensorNodeId_ = visitor.visitLong(sensorNodeId_ != 0L, sensorNodeId_,
            other.sensorNodeId_ != 0L, other.sensorNodeId_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 8: {

                hubId_ = input.readUInt64();
                break;
              }
              case 16: {

                sensorNodeId_ = input.readUInt64();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (com.tinkl.tinkl.PuckId.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:routeguide.PuckId)
  private static final com.tinkl.tinkl.PuckId DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new PuckId();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static com.tinkl.tinkl.PuckId getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<PuckId> PARSER;

  public static com.google.protobuf.Parser<PuckId> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

