// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tinkl.proto

package com.tinkl.tinkl;

/**
 * Protobuf type {@code routeguide.Urination}
 */
public  final class Urination extends
    com.google.protobuf.GeneratedMessageLite<
        Urination, Urination.Builder> implements
    // @@protoc_insertion_point(message_implements:routeguide.Urination)
    UrinationOrBuilder {
  private Urination() {
    samples_ = emptyProtobufList();
  }
  private int bitField0_;
  public static final int HUB_ID_FIELD_NUMBER = 1;
  private long hubId_;
  /**
   * <pre>
   * ID of the hub, unique globally
   * </pre>
   *
   * <code>optional uint64 hub_id = 1;</code>
   */
  public long getHubId() {
    return hubId_;
  }
  /**
   * <pre>
   * ID of the hub, unique globally
   * </pre>
   *
   * <code>optional uint64 hub_id = 1;</code>
   */
  private void setHubId(long value) {
    
    hubId_ = value;
  }
  /**
   * <pre>
   * ID of the hub, unique globally
   * </pre>
   *
   * <code>optional uint64 hub_id = 1;</code>
   */
  private void clearHubId() {
    
    hubId_ = 0L;
  }

  public static final int SENSOR_NODE_ID_FIELD_NUMBER = 2;
  private long sensorNodeId_;
  /**
   * <pre>
   * ID of the puck, unique within hub
   * </pre>
   *
   * <code>optional uint64 sensor_node_id = 2;</code>
   */
  public long getSensorNodeId() {
    return sensorNodeId_;
  }
  /**
   * <pre>
   * ID of the puck, unique within hub
   * </pre>
   *
   * <code>optional uint64 sensor_node_id = 2;</code>
   */
  private void setSensorNodeId(long value) {
    
    sensorNodeId_ = value;
  }
  /**
   * <pre>
   * ID of the puck, unique within hub
   * </pre>
   *
   * <code>optional uint64 sensor_node_id = 2;</code>
   */
  private void clearSensorNodeId() {
    
    sensorNodeId_ = 0L;
  }

  public static final int URINATION_ID_FIELD_NUMBER = 3;
  private long urinationId_;
  /**
   * <pre>
   * ID of the urination, unique within puck
   * </pre>
   *
   * <code>optional uint64 urination_id = 3;</code>
   */
  public long getUrinationId() {
    return urinationId_;
  }
  /**
   * <pre>
   * ID of the urination, unique within puck
   * </pre>
   *
   * <code>optional uint64 urination_id = 3;</code>
   */
  private void setUrinationId(long value) {
    
    urinationId_ = value;
  }
  /**
   * <pre>
   * ID of the urination, unique within puck
   * </pre>
   *
   * <code>optional uint64 urination_id = 3;</code>
   */
  private void clearUrinationId() {
    
    urinationId_ = 0L;
  }

  public static final int SENSOR_BATTERY_VOLTAGE_FIELD_NUMBER = 4;
  private float sensorBatteryVoltage_;
  /**
   * <code>optional float sensor_battery_voltage = 4;</code>
   */
  public float getSensorBatteryVoltage() {
    return sensorBatteryVoltage_;
  }
  /**
   * <code>optional float sensor_battery_voltage = 4;</code>
   */
  private void setSensorBatteryVoltage(float value) {
    
    sensorBatteryVoltage_ = value;
  }
  /**
   * <code>optional float sensor_battery_voltage = 4;</code>
   */
  private void clearSensorBatteryVoltage() {
    
    sensorBatteryVoltage_ = 0F;
  }

  public static final int SAMPLES_FIELD_NUMBER = 5;
  private com.google.protobuf.Internal.ProtobufList<com.tinkl.tinkl.Sample> samples_;
  /**
   * <code>repeated .routeguide.Sample samples = 5;</code>
   */
  public java.util.List<com.tinkl.tinkl.Sample> getSamplesList() {
    return samples_;
  }
  /**
   * <code>repeated .routeguide.Sample samples = 5;</code>
   */
  public java.util.List<? extends com.tinkl.tinkl.SampleOrBuilder> 
      getSamplesOrBuilderList() {
    return samples_;
  }
  /**
   * <code>repeated .routeguide.Sample samples = 5;</code>
   */
  public int getSamplesCount() {
    return samples_.size();
  }
  /**
   * <code>repeated .routeguide.Sample samples = 5;</code>
   */
  public com.tinkl.tinkl.Sample getSamples(int index) {
    return samples_.get(index);
  }
  /**
   * <code>repeated .routeguide.Sample samples = 5;</code>
   */
  public com.tinkl.tinkl.SampleOrBuilder getSamplesOrBuilder(
      int index) {
    return samples_.get(index);
  }
  private void ensureSamplesIsMutable() {
    if (!samples_.isModifiable()) {
      samples_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(samples_);
     }
  }

  /**
   * <code>repeated .routeguide.Sample samples = 5;</code>
   */
  private void setSamples(
      int index, com.tinkl.tinkl.Sample value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureSamplesIsMutable();
    samples_.set(index, value);
  }
  /**
   * <code>repeated .routeguide.Sample samples = 5;</code>
   */
  private void setSamples(
      int index, com.tinkl.tinkl.Sample.Builder builderForValue) {
    ensureSamplesIsMutable();
    samples_.set(index, builderForValue.build());
  }
  /**
   * <code>repeated .routeguide.Sample samples = 5;</code>
   */
  private void addSamples(com.tinkl.tinkl.Sample value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureSamplesIsMutable();
    samples_.add(value);
  }
  /**
   * <code>repeated .routeguide.Sample samples = 5;</code>
   */
  private void addSamples(
      int index, com.tinkl.tinkl.Sample value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureSamplesIsMutable();
    samples_.add(index, value);
  }
  /**
   * <code>repeated .routeguide.Sample samples = 5;</code>
   */
  private void addSamples(
      com.tinkl.tinkl.Sample.Builder builderForValue) {
    ensureSamplesIsMutable();
    samples_.add(builderForValue.build());
  }
  /**
   * <code>repeated .routeguide.Sample samples = 5;</code>
   */
  private void addSamples(
      int index, com.tinkl.tinkl.Sample.Builder builderForValue) {
    ensureSamplesIsMutable();
    samples_.add(index, builderForValue.build());
  }
  /**
   * <code>repeated .routeguide.Sample samples = 5;</code>
   */
  private void addAllSamples(
      java.lang.Iterable<? extends com.tinkl.tinkl.Sample> values) {
    ensureSamplesIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, samples_);
  }
  /**
   * <code>repeated .routeguide.Sample samples = 5;</code>
   */
  private void clearSamples() {
    samples_ = emptyProtobufList();
  }
  /**
   * <code>repeated .routeguide.Sample samples = 5;</code>
   */
  private void removeSamples(int index) {
    ensureSamplesIsMutable();
    samples_.remove(index);
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (hubId_ != 0L) {
      output.writeUInt64(1, hubId_);
    }
    if (sensorNodeId_ != 0L) {
      output.writeUInt64(2, sensorNodeId_);
    }
    if (urinationId_ != 0L) {
      output.writeUInt64(3, urinationId_);
    }
    if (sensorBatteryVoltage_ != 0F) {
      output.writeFloat(4, sensorBatteryVoltage_);
    }
    for (int i = 0; i < samples_.size(); i++) {
      output.writeMessage(5, samples_.get(i));
    }
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (hubId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(1, hubId_);
    }
    if (sensorNodeId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(2, sensorNodeId_);
    }
    if (urinationId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(3, urinationId_);
    }
    if (sensorBatteryVoltage_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(4, sensorBatteryVoltage_);
    }
    for (int i = 0; i < samples_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, samples_.get(i));
    }
    memoizedSerializedSize = size;
    return size;
  }

  public static com.tinkl.tinkl.Urination parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.tinkl.tinkl.Urination parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.tinkl.tinkl.Urination parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.tinkl.tinkl.Urination parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.tinkl.tinkl.Urination parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.tinkl.tinkl.Urination parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.tinkl.tinkl.Urination parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.tinkl.tinkl.Urination parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.tinkl.tinkl.Urination parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.tinkl.tinkl.Urination parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.tinkl.tinkl.Urination prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * Protobuf type {@code routeguide.Urination}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.tinkl.tinkl.Urination, Builder> implements
      // @@protoc_insertion_point(builder_implements:routeguide.Urination)
      com.tinkl.tinkl.UrinationOrBuilder {
    // Construct using com.tinkl.tinkl.Urination.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * ID of the hub, unique globally
     * </pre>
     *
     * <code>optional uint64 hub_id = 1;</code>
     */
    public long getHubId() {
      return instance.getHubId();
    }
    /**
     * <pre>
     * ID of the hub, unique globally
     * </pre>
     *
     * <code>optional uint64 hub_id = 1;</code>
     */
    public Builder setHubId(long value) {
      copyOnWrite();
      instance.setHubId(value);
      return this;
    }
    /**
     * <pre>
     * ID of the hub, unique globally
     * </pre>
     *
     * <code>optional uint64 hub_id = 1;</code>
     */
    public Builder clearHubId() {
      copyOnWrite();
      instance.clearHubId();
      return this;
    }

    /**
     * <pre>
     * ID of the puck, unique within hub
     * </pre>
     *
     * <code>optional uint64 sensor_node_id = 2;</code>
     */
    public long getSensorNodeId() {
      return instance.getSensorNodeId();
    }
    /**
     * <pre>
     * ID of the puck, unique within hub
     * </pre>
     *
     * <code>optional uint64 sensor_node_id = 2;</code>
     */
    public Builder setSensorNodeId(long value) {
      copyOnWrite();
      instance.setSensorNodeId(value);
      return this;
    }
    /**
     * <pre>
     * ID of the puck, unique within hub
     * </pre>
     *
     * <code>optional uint64 sensor_node_id = 2;</code>
     */
    public Builder clearSensorNodeId() {
      copyOnWrite();
      instance.clearSensorNodeId();
      return this;
    }

    /**
     * <pre>
     * ID of the urination, unique within puck
     * </pre>
     *
     * <code>optional uint64 urination_id = 3;</code>
     */
    public long getUrinationId() {
      return instance.getUrinationId();
    }
    /**
     * <pre>
     * ID of the urination, unique within puck
     * </pre>
     *
     * <code>optional uint64 urination_id = 3;</code>
     */
    public Builder setUrinationId(long value) {
      copyOnWrite();
      instance.setUrinationId(value);
      return this;
    }
    /**
     * <pre>
     * ID of the urination, unique within puck
     * </pre>
     *
     * <code>optional uint64 urination_id = 3;</code>
     */
    public Builder clearUrinationId() {
      copyOnWrite();
      instance.clearUrinationId();
      return this;
    }

    /**
     * <code>optional float sensor_battery_voltage = 4;</code>
     */
    public float getSensorBatteryVoltage() {
      return instance.getSensorBatteryVoltage();
    }
    /**
     * <code>optional float sensor_battery_voltage = 4;</code>
     */
    public Builder setSensorBatteryVoltage(float value) {
      copyOnWrite();
      instance.setSensorBatteryVoltage(value);
      return this;
    }
    /**
     * <code>optional float sensor_battery_voltage = 4;</code>
     */
    public Builder clearSensorBatteryVoltage() {
      copyOnWrite();
      instance.clearSensorBatteryVoltage();
      return this;
    }

    /**
     * <code>repeated .routeguide.Sample samples = 5;</code>
     */
    public java.util.List<com.tinkl.tinkl.Sample> getSamplesList() {
      return java.util.Collections.unmodifiableList(
          instance.getSamplesList());
    }
    /**
     * <code>repeated .routeguide.Sample samples = 5;</code>
     */
    public int getSamplesCount() {
      return instance.getSamplesCount();
    }/**
     * <code>repeated .routeguide.Sample samples = 5;</code>
     */
    public com.tinkl.tinkl.Sample getSamples(int index) {
      return instance.getSamples(index);
    }
    /**
     * <code>repeated .routeguide.Sample samples = 5;</code>
     */
    public Builder setSamples(
        int index, com.tinkl.tinkl.Sample value) {
      copyOnWrite();
      instance.setSamples(index, value);
      return this;
    }
    /**
     * <code>repeated .routeguide.Sample samples = 5;</code>
     */
    public Builder setSamples(
        int index, com.tinkl.tinkl.Sample.Builder builderForValue) {
      copyOnWrite();
      instance.setSamples(index, builderForValue);
      return this;
    }
    /**
     * <code>repeated .routeguide.Sample samples = 5;</code>
     */
    public Builder addSamples(com.tinkl.tinkl.Sample value) {
      copyOnWrite();
      instance.addSamples(value);
      return this;
    }
    /**
     * <code>repeated .routeguide.Sample samples = 5;</code>
     */
    public Builder addSamples(
        int index, com.tinkl.tinkl.Sample value) {
      copyOnWrite();
      instance.addSamples(index, value);
      return this;
    }
    /**
     * <code>repeated .routeguide.Sample samples = 5;</code>
     */
    public Builder addSamples(
        com.tinkl.tinkl.Sample.Builder builderForValue) {
      copyOnWrite();
      instance.addSamples(builderForValue);
      return this;
    }
    /**
     * <code>repeated .routeguide.Sample samples = 5;</code>
     */
    public Builder addSamples(
        int index, com.tinkl.tinkl.Sample.Builder builderForValue) {
      copyOnWrite();
      instance.addSamples(index, builderForValue);
      return this;
    }
    /**
     * <code>repeated .routeguide.Sample samples = 5;</code>
     */
    public Builder addAllSamples(
        java.lang.Iterable<? extends com.tinkl.tinkl.Sample> values) {
      copyOnWrite();
      instance.addAllSamples(values);
      return this;
    }
    /**
     * <code>repeated .routeguide.Sample samples = 5;</code>
     */
    public Builder clearSamples() {
      copyOnWrite();
      instance.clearSamples();
      return this;
    }
    /**
     * <code>repeated .routeguide.Sample samples = 5;</code>
     */
    public Builder removeSamples(int index) {
      copyOnWrite();
      instance.removeSamples(index);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:routeguide.Urination)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.tinkl.tinkl.Urination();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        samples_.makeImmutable();
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        com.tinkl.tinkl.Urination other = (com.tinkl.tinkl.Urination) arg1;
        hubId_ = visitor.visitLong(hubId_ != 0L, hubId_,
            other.hubId_ != 0L, other.hubId_);
        sensorNodeId_ = visitor.visitLong(sensorNodeId_ != 0L, sensorNodeId_,
            other.sensorNodeId_ != 0L, other.sensorNodeId_);
        urinationId_ = visitor.visitLong(urinationId_ != 0L, urinationId_,
            other.urinationId_ != 0L, other.urinationId_);
        sensorBatteryVoltage_ = visitor.visitFloat(sensorBatteryVoltage_ != 0F, sensorBatteryVoltage_,
            other.sensorBatteryVoltage_ != 0F, other.sensorBatteryVoltage_);
        samples_= visitor.visitList(samples_, other.samples_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
          bitField0_ |= other.bitField0_;
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 8: {

                hubId_ = input.readUInt64();
                break;
              }
              case 16: {

                sensorNodeId_ = input.readUInt64();
                break;
              }
              case 24: {

                urinationId_ = input.readUInt64();
                break;
              }
              case 37: {

                sensorBatteryVoltage_ = input.readFloat();
                break;
              }
              case 42: {
                if (!samples_.isModifiable()) {
                  samples_ =
                      com.google.protobuf.GeneratedMessageLite.mutableCopy(samples_);
                }
                samples_.add(
                    input.readMessage(com.tinkl.tinkl.Sample.parser(), extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (com.tinkl.tinkl.Urination.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:routeguide.Urination)
  private static final com.tinkl.tinkl.Urination DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new Urination();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static com.tinkl.tinkl.Urination getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<Urination> PARSER;

  public static com.google.protobuf.Parser<Urination> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

